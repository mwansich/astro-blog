---
import BaseLayout from '../../layouts/BaseLayout.astro';
import BlogPost from '../../components/BlogPost.astro';
import { getCollection } from "astro:content";

export async function getStaticPaths() {
  const allPosts = await getCollection("blog");

  const uniqueTags = [...new Set(allPosts.map((post) => post.data.tags).flat())];

  // added the same sort function from blog.astro that Claude helped me with to the filter from the tutorial
  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post: any) => post.data.tags.includes(tag))
    .sort((a: any, b: any) => new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime());
    return {
      params: { tag },
      props: { posts: filteredPosts, uniqueTags },
    };
  });
}

const { tag } = Astro.params;
const { posts, uniqueTags } = Astro.props;
---
<BaseLayout pageTitle={`Tag: ${tag}`}>
  <h2>Posts tagged with {tag}</h2>
    {posts.map((post: any) => <BlogPost url={`/posts/${post.id}/`} title={post.data.title} date={post.data.pubDate} image={post.data.cover} alt={post.data.coverAlt} description={post.data.description} author={post.data.author} />)}
  <h2>Explore more tags</h2>
    <div class="tags">
    {uniqueTags.filter(t => t !== tag).map((othertag) => (
      <p class="tag"><a href={`/tags/${othertag}`}>{othertag}</a></p>
    ))}
  </div>
</BaseLayout>

<style>

  .tags {
    margin-top: -15px;
  }

    .tag a {
        color: inherit;
    }

</style>